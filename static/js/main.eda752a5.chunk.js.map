{"version":3,"sources":["store/index.js","components/Map.js","components/MobileSelector.js","util.js","components/DNCChart.js","components/HospitalChart.js","components/Info.js","App.js","index.js"],"names":["middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","createLogger","collapsed","initialState","DNCData","TEST","HospitalData","TotalCounts","selectedState","gotDNCData","data","type","gotHospitalData","gotTotalCounts","changeSelectedState","store","createStore","state","action","Map","selected","width","window","innerWidth","mapHandler","event","stateInitials","target","dataset","name","props","setState","statesCustomConfig","fill","className","customize","this","onClick","height","Component","connect","dispatch","newState","id","onChange","e","value","getDates","stopDate","Date","startDate","setDate","getDate","length","dateArray","currentDate","date","toISOString","slice","push","addDays","prototype","days","valueOf","stateNames","AL","AK","AS","AZ","AR","CA","CO","CT","DE","DC","FM","FL","GA","GU","HI","ID","IL","IN","IA","KS","KY","LA","ME","MH","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","MP","OH","OK","OR","PW","PA","PR","RI","SC","SD","TN","TX","UT","VT","VI","VA","WA","WV","WI","WY","statePops","options","responsive","legend","display","maintainAspectRatio","elements","line","scales","xAxes","gridLines","yAxes","stateData","labels","datasets","label","ma","borderColor","backgroundColor","generateData","ticks","beginAtZero","HospitalChart","React","totalCounts","Math","floor","toFixed","dncData","hospitalData","getStateData","a","axios","get","i","positiveIncrease","max","deathIncrease","undefined","positive","death","hospitalizedCumulative","hospitalizedCurrently","console","error","useState","loaded","setLoaded","setWidth","LOADING","useEffect","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eda752a5.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport axios from 'axios'\n\nconst middleware = composeWithDevTools(\n  applyMiddleware(thunkMiddleware, createLogger({ collapsed: true }))\n)\n\nconst GOT_DNC_DATA = 'GOT_DNC_DATA'\nconst GOT_HOSPITAL_DATA = 'GOT_HOSPITAL_DATA'\nconst GOT_TOTAL_COUNTS = 'GOT_TOTAL_COUNTS'\nconst CHANGE_SELECTED_STATE = 'CHANGE_SELECTED_STATE'\n\nconst initialState = {\n  DNCData: { TEST: [] },\n  HospitalData: { TEST: [] },\n  TotalCounts: { TEST: [0, 0, 0, 0] },\n  selectedState: 'TEST',\n}\n\nconst gotDNCData = (data) => ({ type: GOT_DNC_DATA, data })\nconst gotHospitalData = (data) => ({ type: GOT_HOSPITAL_DATA, data })\nconst gotTotalCounts = (data) => ({ type: GOT_TOTAL_COUNTS, data })\nexport const changeSelectedState = (selectedState) => ({\n  type: CHANGE_SELECTED_STATE,\n  selectedState,\n})\n\nexport const getCountryData = () => async (dispatch) => {\n  try {\n    const { data } = await axios.get(\n      'https://api.covidtracking.com/v1/us/daily.json'\n    )\n  } catch (error) {\n    \n  }\n}\n\nexport const getStateData = () => async (dispatch) => {\n  try {\n    const { data } = await axios.get(\n      'https://api.covidtracking.com/v1/states/daily.json'\n    )\n\n    let DNCData = { TEST: [] }\n    let HospitalData = { TEST: [] }\n    let TotalCounts = { TEST: [0, 0, 0, 0] }\n    for (let i = data.length - 1; i >= 0; i--) {\n      if (DNCData[data[i].state] && data[i].positiveIncrease) {\n        DNCData[data[i].state].push(Math.max(data[i].positiveIncrease, 0))\n      } else if (data[i].positiveIncrease) {\n        DNCData[data[i].state] = [Math.max(data[i].positiveIncrease, 0)]\n      }\n      if (HospitalData[data[i].state] && data[i].deathIncrease !== null) {\n        HospitalData[data[i].state].push(Math.max(data[i].deathIncrease, 0))\n      } else if (data[i].deathIncrease !== null) {\n        HospitalData[data[i].state] = [Math.max(data[i].deathIncrease, 0)]\n      }\n    }\n    let i = 0\n    while (TotalCounts[data[i].state] === undefined) {\n      TotalCounts[data[i].state] = [\n        data[i].positive,\n        data[i].death,\n        data[i].hospitalizedCumulative,\n        data[i].hospitalizedCurrently,\n      ]\n      i++\n    }\n\n    dispatch(gotDNCData(DNCData))\n    dispatch(gotHospitalData(HospitalData))\n    dispatch(gotTotalCounts(TotalCounts))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GOT_DNC_DATA:\n      return { ...state, DNCData: action.data }\n    case GOT_HOSPITAL_DATA:\n      return { ...state, HospitalData: action.data }\n    case GOT_TOTAL_COUNTS:\n      return { ...state, TotalCounts: action.data }\n    case CHANGE_SELECTED_STATE:\n      return {\n        ...state,\n        selectedState: action.selectedState,\n      }\n    default:\n      return state\n  }\n}\n\nconst store = createStore(reducer, middleware)\n\nexport default store\n","import React, { Component } from 'react'\nimport './Map.css'\nimport USAMap from 'react-usa-map'\nimport { connect } from 'react-redux'\nimport { changeSelectedState } from '../store'\n\nclass Map extends Component {\n  state = {\n    selected: null,\n    width: window.innerWidth,\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.width !== state.width) {\n      return {\n        width: props.width,\n      }\n    }\n\n    return null\n  }\n\n  mapHandler = (event) => {\n    const stateInitials = event.target.dataset.name\n    this.props.changeSelectedState(stateInitials)\n    this.setState({\n      selected: stateInitials,\n    })\n  }\n\n  statesCustomConfig = () => {\n    return {\n      [this.state.selected]: {\n        fill: '#fd4159',\n      },\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Map\">\n        <USAMap\n          customize={this.statesCustomConfig()}\n          onClick={this.mapHandler}\n          width={this.state.width * 0.33}\n          height={this.state.width * 0.22}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapDispatch = (dispatch) => {\n  return {\n    changeSelectedState: (newState) => dispatch(changeSelectedState(newState)),\n  }\n}\n\nexport default connect(null, mapDispatch)(Map)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { changeSelectedState } from '../store'\n\nconst MobileSelector = (props) => {\n  const { changeSelectedState } = props\n\n  return (\n    <select\n      id=\"mobile-selector\"\n      onChange={(e) => changeSelectedState(e.target.value)}\n    >\n      <option value=\"TEST\">Select A State</option>\n      <option value=\"AL\">Alabama</option>\n      <option value=\"AK\">Alaska</option>\n      <option value=\"AZ\">Arizona</option>\n      <option value=\"AR\">Arkansas</option>\n      <option value=\"CA\">California</option>\n      <option value=\"CO\">Colorado</option>\n      <option value=\"CT\">Connecticut</option>\n      <option value=\"DE\">Delaware</option>\n      <option value=\"FL\">Florida</option>\n      <option value=\"GA\">Georgia</option>\n      <option value=\"HI\">Hawaii</option>\n      <option value=\"ID\">Idaho</option>\n      <option value=\"IL\">Illinois</option>\n      <option value=\"IN\">Indiana</option>\n      <option value=\"IA\">Iowa</option>\n      <option value=\"KS\">Kansas</option>\n      <option value=\"KY\">Kentucky</option>\n      <option value=\"LA\">Louisiana</option>\n      <option value=\"ME\">Maine</option>\n      <option value=\"MD\">Maryland</option>\n      <option value=\"MA\">Massachusetts</option>\n      <option value=\"MI\">Michigan</option>\n      <option value=\"MN\">Minnesota</option>\n      <option value=\"MS\">Mississippi</option>\n      <option value=\"MO\">Missouri</option>\n      <option value=\"MT\">Montana</option>\n      <option value=\"NE\">Nebraska</option>\n      <option value=\"NV\">Nevada</option>\n      <option value=\"NH\">New Hampshire</option>\n      <option value=\"NJ\">New Jersey</option>\n      <option value=\"NM\">New Mexico</option>\n      <option value=\"NY\">New York</option>\n      <option value=\"NC\">North Carolina</option>\n      <option value=\"ND\">North Dakota</option>\n      <option value=\"OH\">Ohio</option>\n      <option value=\"OK\">Oklahoma</option>\n      <option value=\"OR\">Oregon</option>\n      <option value=\"PA\">Pennsylvania</option>\n      <option value=\"RI\">Rhode Island</option>\n      <option value=\"SC\">South Carolina</option>\n      <option value=\"SD\">South Dakota</option>\n      <option value=\"TN\">Tennessee</option>\n      <option value=\"TX\">Texas</option>\n      <option value=\"UT\">Utah</option>\n      <option value=\"VT\">Vermont</option>\n      <option value=\"VA\">Virginia</option>\n      <option value=\"WA\">Washington</option>\n      <option value=\"WV\">West Virginia</option>\n      <option value=\"WI\">Wisconsin</option>\n      <option value=\"WY\">Wyoming</option>\n    </select>\n  )\n}\n\nconst mapDispatch = (dispatch) => {\n  return {\n    changeSelectedState: (newState) => dispatch(changeSelectedState(newState)),\n  }\n}\n\nexport default connect(null, mapDispatch)(MobileSelector)\n","Date.prototype.addDays = function (days) {\n  var date = new Date(this.valueOf())\n  date.setDate(date.getDate() + days)\n  return date\n}\n\nexport function debounce(fn, ms) {\n  let timer\n  return (_) => {\n    clearTimeout(timer)\n    timer = setTimeout((_) => {\n      timer = null\n      fn.apply(this, arguments)\n    }, ms)\n  }\n}\n\nexport function getDates(data) {\n  if (data) {\n    let stopDate = new Date()\n    let startDate = new Date()\n    startDate.setDate(startDate.getDate() - data.length)\n  \n    var dateArray = []\n    var currentDate = startDate\n    while (currentDate <= stopDate) {\n      let date = new Date(currentDate).toISOString().slice(0, 10)\n      dateArray.push(date)\n      currentDate = currentDate.addDays(1)\n    }\n    return dateArray\n  }\n}\n\nexport const stateNames = {\n  TEST: 'Select a State',\n  AL: 'Alabama',\n  AK: 'Alaska',\n  AS: 'American Samoa',\n  AZ: 'Arizona',\n  AR: 'Arkansas',\n  CA: 'California',\n  CO: 'Colorado',\n  CT: 'Connecticut',\n  DE: 'Delaware',\n  DC: 'District Of Columbia',\n  FM: 'Federated States Of Micronesia',\n  FL: 'Florida',\n  GA: 'Georgia',\n  GU: 'Guam',\n  HI: 'Hawaii',\n  ID: 'Idaho',\n  IL: 'Illinois',\n  IN: 'Indiana',\n  IA: 'Iowa',\n  KS: 'Kansas',\n  KY: 'Kentucky',\n  LA: 'Louisiana',\n  ME: 'Maine',\n  MH: 'Marshall Islands',\n  MD: 'Maryland',\n  MA: 'Massachusetts',\n  MI: 'Michigan',\n  MN: 'Minnesota',\n  MS: 'Mississippi',\n  MO: 'Missouri',\n  MT: 'Montana',\n  NE: 'Nebraska',\n  NV: 'Nevada',\n  NH: 'New Hampshire',\n  NJ: 'New Jersey',\n  NM: 'New Mexico',\n  NY: 'New York',\n  NC: 'North Carolina',\n  ND: 'North Dakota',\n  MP: 'Northern Mariana Islands',\n  OH: 'Ohio',\n  OK: 'Oklahoma',\n  OR: 'Oregon',\n  PW: 'Palau',\n  PA: 'Pennsylvania',\n  PR: 'Puerto Rico',\n  RI: 'Rhode Island',\n  SC: 'South Carolina',\n  SD: 'South Dakota',\n  TN: 'Tennessee',\n  TX: 'Texas',\n  UT: 'Utah',\n  VT: 'Vermont',\n  VI: 'Virgin Islands',\n  VA: 'Virginia',\n  WA: 'Washington',\n  WV: 'West Virginia',\n  WI: 'Wisconsin',\n  WY: 'Wyoming',\n}\n\nexport const statePops = {\n  TEST: 1,\n  AL: 4903185,\n  AK: 731545,\n  AS: 55641,\n  AZ: 7278717,\n  AR: 3017825,\n  CA: 39512223,\n  CO: 5758736,\n  CT: 3565287,\n  DE: 973764,\n  DC: 705749,\n  FL: 21477737,\n  GA: 10617423,\n  GU: 165718,\n  HI: 1415872,\n  ID: 1787065,\n  IL: 12671821,\n  IN: 6732219,\n  IA: 3155070,\n  KS: 2913314,\n  KY: 4467673,\n  LA: 4648794,\n  ME: 1344212,\n  MD: 6045680,\n  MA: 6949503,\n  MI: 9986857,\n  MN: 5639632,\n  MS: 2976149,\n  MO: 6137428,\n  MT: 1068778,\n  NE: 1934408,\n  NV: 3080156,\n  NH: 1359711,\n  NJ: 8882190,\n  NM: 2096829,\n  NY: 19453561,\n  NC: 10488084,\n  ND: 762062,\n  OH: 11689100,\n  OK: 3956971,\n  OR: 4217737,\n  PA: 12801989,\n  PR: 3193694,\n  RI: 1059361,\n  SC: 5148714,\n  SD: 884659,\n  TN: 6833174,\n  TX: 28995881,\n  UT: 3205958,\n  VT: 623989,\n  VA: 8535519,\n  WA: 7614893,\n  WV: 1792147,\n  WI: 5822434,\n  WY: 578759,\n}\n","import { connect } from 'react-redux'\nimport { getDates } from '../util'\nimport React from 'react'\nimport { Bar } from 'react-chartjs-2'\nimport { ma } from 'moving-averages'\n\nconst generateData = (data) => ({\n  labels: getDates(data),\n  datasets: [\n    {\n      label: '7 Day Moving Average',\n      type: 'line',\n      data: ma(data, 7),\n      fill: false,\n      borderColor: '#41b5fd',\n    },\n    {\n      type: 'bar',\n      label: 'Daily New Cases',\n      data: data,\n      fill: false,\n      backgroundColor: '#fd4159',\n    },\n  ],\n})\n\nconst options = {\n  responsive: true,\n  legend: {\n    display: false,\n  },\n  maintainAspectRatio: false,\n  elements: {\n    line: {\n      fill: false,\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        display: false,\n        gridLines: {\n          display: false,\n        },\n      },\n    ],\n    yAxes: [\n      {\n        type: 'linear',\n        display: true,\n        gridLines: {\n          display: false,\n        },\n      },\n    ],\n  },\n}\n\nconst DNCChart = (props) => {\n  const { data, selectedState } = props\n\n  if (data && data[selectedState]) {\n    const stateData = generateData(data[selectedState])\n\n    return (\n      <div id=\"chart-container\">\n        <h3>Daily New Cases</h3>\n        <Bar data={stateData} options={options} />\n      </div>\n    )\n  }\n\n  return <div></div>\n}\n\nconst mapState = (state) => {\n  return {\n    data: state.DNCData,\n    selectedState: state.selectedState,\n  }\n}\n\nexport default connect(mapState, null)(DNCChart)\n","import { connect } from 'react-redux'\nimport { getDates } from '../util'\nimport React from 'react'\nimport { Bar } from 'react-chartjs-2'\nimport { ma } from 'moving-averages'\n\nconst generateData = (data) => ({\n  labels: getDates(data),\n  datasets: [\n    {\n      label: '7 Day Moving Average',\n      type: 'line',\n      data: ma(data, 7),\n      fill: false,\n      borderColor: '#41b5fd',\n    },\n    {\n      type: 'bar',\n      label: 'Daily Hospitalizations',\n      data: data,\n      fill: false,\n      backgroundColor: '#fd4159',\n    },\n  ],\n})\n\nconst options = {\n  responsive: true,\n  legend: {\n    display: false,\n  },\n  maintainAspectRatio: false,\n  elements: {\n    line: {\n      fill: false,\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        display: false,\n        gridLines: {\n          display: false,\n        },\n      },\n    ],\n    yAxes: [\n      {\n        type: 'linear',\n        display: true,\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n}\n\nclass HospitalChart extends React.Component {\n  render() {\n    const { data, selectedState } = this.props\n\n    if (data && data[selectedState]) {\n      const stateData = generateData(data[selectedState])\n\n      return (\n        <div id=\"chart-container\">\n          <h3>Daily New Deaths</h3>\n          <Bar data={stateData} options={options} />\n        </div>\n      )\n    }\n\n    return <div></div>\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    data: state.HospitalData,\n    selectedState: state.selectedState,\n  }\n}\n\nexport default connect(mapState, null)(HospitalChart)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { stateNames, statePops } from '../util'\n\nconst Info = (props) => {\n  const { totalCounts, selectedState } = props\n  if (totalCounts && totalCounts[selectedState]) {\n    return (\n      <div id=\"info\">\n        <h1>{stateNames[selectedState]}</h1>\n        <h3>Total Cases: {totalCounts[selectedState][0]}</h3>\n        <h3>\n          Cases per 100K:{' '}\n          {Math.floor(\n            totalCounts[selectedState][0] / (statePops[selectedState] / 100000)\n          )}\n        </h3>\n        <h3>Total Deaths: {totalCounts[selectedState][1]}</h3>\n        <h3>\n          Deaths per 100K:{' '}\n          {(\n            totalCounts[selectedState][1] /\n            (statePops[selectedState] / 100000)\n          ).toFixed(2)}\n        </h3>\n        <h3>Total Hospitalizations: {totalCounts[selectedState][2]}</h3>\n        <h3>Current Hospitalizations: {totalCounts[selectedState][3]}</h3>\n      </div>\n    )\n  }\n\n  return <div id=\"info\"></div>\n}\n\nconst mapState = (state) => {\n  return {\n    totalCounts: state.TotalCounts,\n    selectedState: state.selectedState,\n  }\n}\n\nexport default connect(mapState, null)(Info)\n","import React, { useEffect, useState } from 'react'\nimport './App.css'\nimport Map from './components/Map'\nimport MobileSelector from './components/MobileSelector'\nimport DNCChart from './components/DNCChart'\nimport HospitalChart from './components/HospitalChart'\nimport Info from './components/Info'\nimport { connect } from 'react-redux'\nimport { getStateData } from './store'\nimport { debounce } from './util'\n\nconst App = ({getStateData, dncData, hospitalData}) => {\n  const [loaded, setLoaded] = useState(false)\n  const [width, setWidth] = useState(window.innerWidth)\n\n  const LOADING = !dncData['NY'] || !hospitalData['NY']\n\n  useEffect(() => {\n    if (!loaded) {\n      getStateData()\n      setLoaded(true)\n    }\n    const debouncedHandleResize = debounce(\n      () => setWidth(window.innerWidth),\n      100\n    )\n\n    window.addEventListener('resize', debouncedHandleResize)\n\n    return () => {\n      window.removeEventListener('resize', debouncedHandleResize)\n    }\n  }, [getStateData, width, loaded])\n\n\n  return (\n    <div className=\"App\">\n      <div id=\"top\">\n        {!LOADING && (\n          <>\n            <MobileSelector />\n            <Map width={width} />\n          </>\n        )}\n        <Info />\n      </div>\n      <div id=\"charts\">\n        <DNCChart />\n        <HospitalChart />\n      </div>\n    </div>\n  )\n}\n\nconst mapDispatch = (dispatch) => {\n  return {\n    getStateData: () => dispatch(getStateData()),\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    dncData: state.DNCData,\n    hospitalData: state.HospitalData,\n  }\n}\n\nexport default connect(mapState, mapDispatch)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}